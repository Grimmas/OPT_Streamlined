// WBI Kerbal Actuators = = =
@PART[opt_vtol*]:NEEDS[KerbalActuators]
{
	MODULE
	{
		name = WBIHoverController
		guiVisible = false
		verticalSpeedIncrements = 1.0
	}
}

@PART[opt_vtol_jumpa*|opt_vtol_bubble*|opt_vtol_egg|opt_vtol_heli*]:NEEDS[KerbalActuators]
	MODULE
	{
		//This module handles mesh rotation operations such as an engine nacelle pivot.
		name = WBIRotationController

		//(Optional, defaults to Actuator) User-friendly name of the rotation controller.
		rotatorName = Actuator

		//(Optional, defaults to Engine) Group ID for the actuator. Allows you to differentiate
		//between the VTOL manager (which uses the Engine group), and, say, a robot arm manager.
		groupID = Engine

		//We'll use the toolbar app button to control VTOL operations.
		//(defaults to true, so we have the buttons in the right-click menu)
		guiVisible = false

		//Name of the pivot
		rotationMeshName = enginePivot

		//Rotation axis of the pivot
		rotationMeshAxis = -1,0,0

		//How fast to rotate the pivot
		rotationDegPerSec = 45

		//Maximum rotation angle
		//From 0 to 360 degrees
		//Min --- Neutral (0) --- Max
		//NOTE: if maxRotateAngle & minRotateAngle are -1 (which is the default),
		//then the rotation pivot can go 360 degrees.
		maxRotateAngle = 90

		//Minimum rotation angle (0 to 360 degrees)
		minRotateAngle = 270

		//Can we rotate to minimum?
		//Ex: tilt-rotor can pivot up and forward and that's it.
		canRotateMin = true

		//Can we rotate to maximum?
		canRotateMax = true

		//Name of the rotate to maximum button (only applies if gui buttons are visible)
		rotateMaxName = Rotate Up
	
		//Name of the rotate to minimum button (only applies if gui buttons are visible)
		rotateMinName = Rotate Down

		//Name of the rotate to neutral button (only applies if gui buttons are visible)
		rotateNeutralName = Rotate Horizontal
	}
}

@PART[opt_vtol_rudder*]:NEEDS[KerbalActuators]
{
	@MODEL
	{
		@model = OPT_Legacy/Parts/Engines/VTOL/O-R
	}
	!MODULE[FXModuleAnimateThrottle] {}
	MODULE
	{
		name = WBIPropSpinner

		guiVisible = True
		actionsVisible = True
		canReverseThrust = False
		forwardThrustActionName = Forward Thrust
		reverseThrustActionName = Reverse Thrust
		thrustTransform = thrustTransform
		reverseThrustTransform = intakeTransform

		//Name of the non-blurred rotor
		//The whole thing spins
		//Your hierarchy should have:
		//Rotor
		//---Hub: gets spun even when blades are blurred.
		//---Standard Blades (Optional): spun along with the hub
		//---Mirrored Blades (Optional): spun along with the hub
		rotorTransformName = Spin
		//Rotations per minute for the non-blurred rotor
		rotorRPM = 20
		//How fast to spin the rotor when blurred; multiply rotorRPM by blurredRotorFactor
		//When rotors are blurred, the hub is not; it's spun at high speed.
		blurredRotorFactor = 4.0		
		//How fast to spool up to RPM
		rotorSpoolTime = 0.1	
		//Rotation axis for both the non-blurred rotor and the blurred rotor
		rotorRotationAxis = 0,0,-1

		//(Optional) Name of the blurred rotor
		//Blurred rotors should NOT be part of the Rotor hierarchy.
		//For the tilt-rotor, they are a child of EnginePivot.
		standardBladesName = Rudder_BladeStatic
		blurredRotorName = BlurAxis
		
		//How fast to spin the blurred rotor
		blurredRotorRPM = 0.4
		
		//At what percentage of thrust to switch to the blurred rotor/mesh rotor.
		minThrustRotorBlur = 60
	}
}
@PART[opt_vtol_heli*]:NEEDS[KerbalActuators]
{
	@MODEL
	{
		@model = OPT_Legacy/Parts/Engines/VTOL/A-H
	}
	!MODULE[FXModuleAnimateThrottle] {}
	MODULE
	{
		name = WBIPropSpinner
		guiVisible = True
		actionsVisible = True
		isThrottleControlled = True
		canReverseThrust = False // Already provided in stock animation
		forwardThrustActionName = Forward Thrust
		reverseThrustActionName = Reverse Thrust
		thrustTransform = thrustTransform
		reverseThrustTransform = intakeTransform
		rotorTransformName = SpinA
		rotorRPM = 20
		blurredRotorFactor = 4.0
		rotorSpoolTime = 3.0
		rotorRotationAxis = 0,0,-1
		standardBladesName = Heli_BladeStaticA
		blurredRotorName = BlurAxisA
		blurredRotorRPM = 6
		minThrustRotorBlur = 60
	}
	MODULE
	{
		name = WBIPropSpinner
		guiVisible = False
		actionsVisible = True
		isThrottleControlled = True
		canReverseThrust = False // Don't need a second such toggle
		forwardThrustActionName = Forward Thrust
		reverseThrustActionName = Reverse Thrust
		thrustTransform = thrustTransform
		reverseThrustTransform = intakeTransform
		rotorTransformName = SpinB
		rotorRPM = 20
		blurredRotorFactor = 4.0
		rotorSpoolTime = 3.0
		rotorRotationAxis = 0,0,1
		standardBladesName = Heli_BladeStaticB
		blurredRotorName = BlurAxisB
		blurredRotorRPM = 6
		minThrustRotorBlur = 60
	}
}